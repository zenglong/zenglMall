use builtin, request, mysql, session;
def TRUE 1;
def FALSE 0;
def USER_ADMIN 'user_admin/admin.zl';

// 通过bltVersionCompare模块函数检测zenglServer的版本号，如果版本号不符合最低版本要求，则直接让脚本退出运行
zls_version = bltGetZenglServerVersion();
zls_version_str = zls_version[0] + '.' + zls_version[1] + '.' + zls_version[2];
zls_min_version = 'v0.24.0';
if(bltVersionCompare(zls_version_str, zls_min_version) < 0)
	print 'zenglServer version (' + zls_version_str + ') < ' + zls_min_version;
	bltExit();
endif

inc 'config.zl';
inc 'mysql.zl';
inc 'fatal_error.zl';

// 前台脚本的全局数据库连接变量，通过该变量可以执行数据库相关的各种操作
db = init_db();
// 获取所有的顶层分类(一级分类)
categories = Mysql.fetchAll(db, "select id,name,description from category where pid=0 order by id asc");

// 设置前台模版中会用到的SEO标题，描述，分类信息，以及common.css通用样式文件
fun header_data(data, is_user_admin = FALSE, css)
	global categories, config;
	data['head_title'] = data['site_name'] = config['site_name'];
	data['description'] = config['site_desc'];
	data['categories'] = categories;
	if(is_user_admin)
		css[] = 'user_admin/common.css?v=20200823';
		data['csses'] = css;
	endif
endfun

// 初始化数据库连接
fun init_db()
	global config;
	db = bltArray();
	Mysql.init(db, config, "tpl/error.tpl");
	return db;
endfun

// ajax返回成功或失败
fun ajax_return(errmsg = '', data)
	ret['msg'] = errmsg ? 'failed' : 'success';
	ret['errmsg'] = errmsg;
	if(errmsg != '')
		ret['error'] = errmsg;
	endif
	if(!bltIsNone(&data))
		ret['data'] = data;
	endif
	rqtSetResponseHeader("Content-Type: application/json");
	print bltJsonEncode(ret);
	bltExit();
endfun
