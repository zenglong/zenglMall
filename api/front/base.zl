// 基础类，提供一些可供其他类使用的通用方法
class Base
	// 根据cid(分类ID)获取商品列表信息，offset设置查询偏移值，num用于设置需要返回的商品数量，where设置查询条件，order设置排序信息，返回的数组中包含了所需的商品列表信息
	fun goodsListByCid(db, cid, offset = 0, num = 10, where = '' , order = ' order by g.id desc ')
		return Mysql.fetchAll(db, "select g.id,g.cid,g.name,price,thumbnail from goods as g inner join category as c on c.id = g.cid where (g.cid = " + 
						cid + " or c.pid = " + cid + ') ' + where + order + " limit " + offset + "," + num);
	endfun

	fun goodsCountByCid(db, cid, offset = 0, num = 10, where = '' , order = ' order by g.id desc ')
		retval = Mysql.fetchOne(db, "select count(1) as total from goods as g inner join category as c on c.id = g.cid where (g.cid = " + 
						cid + " or c.pid = " + cid + ') ' + where + order + " limit " + offset + "," + num);
		return retval['total'];
	endfun

	// 获取商品规格信息
	fun getGoodsSku(db, gid, sku_id = 0)
		sku = Mysql.fetchAll(db, "select * from goods_sku where delete_time is null and gid = " + gid + (sku_id > 0 ? " and id = " + sku_id : ''));
		if(bltCount(sku) > 0)
			sku_ids = '';
			for(i=0; bltIterArray(sku,&i,&k,&v);)
				sku_ids += (k > 0 ? ',' : '') + v['id'];
			endfor
			sku_attr = Mysql.fetchAll(db, "select sa.*, a.name attr_name, v.name value_name from goods_sku_attr sa left join goods_attr a on a.id = sa.attr_id " + 
				" left join goods_attr_value v on v.id = sa.attr_value_id " + 
				" where sa.sku_id in (" + sku_ids + ")");
			for(i=0; bltIterArray(sku_attr,&i,&v);)
				sku_id = bltStr(v['sku_id']);
				attrs = &sku_attr_map[sku_id];
				attrs[] = v;
			endfor
			for(i=0; bltIterArray(sku,&i,&v);)
				sku_id = bltStr(v['id']);
				v['attrs'] = sku_attr_map[sku_id] ? sku_attr_map[sku_id] : bltArray();
			endfor
		endif
		return sku;
	endfun
endclass
