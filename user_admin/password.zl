inc '../common.zl';
inc '../user_sess.zl';

querys = rqtGetQuery();
action = querys['act'] ? querys['act'] : 'show';
if(action == 'show')
	Password.show();
elif(action == 'modify')
	Password.modify();
else
	print 'invalid act';
endif

class Password
	// 前台会员中心的修改密码页面
	fun show(err_msg = '', success_msg = '', posts_data = '')
		global db, sess_data;
		header_data(&data, TRUE, &css);
		css[] = 'user_admin/password.css?v=20200911';
		data['err_msg'] = err_msg;
		data['success_msg'] = success_msg;
		data['posts_data'] = posts_data;
		data['title'] = '修改密码';
		data['cur_menu'] = 'password.zl';
		data['datas'] = bltJsonEncode(data);
		print bltMustacheFileRender("tpl/password.tpl", data);
		if(err_msg)
			bltExit();
		endif
	endfun

	// 执行修改密码的操作
	fun modify()
		global db, sess_data;
		posts_data = rqtGetBodyAsArray();
		// 将用户提交过来的旧密码，新密码，以及确认密码的左右两侧的空格符之类的空白字符给去除掉，同时将无效的POST请求字段给删除掉
		for(i=0;bltIterArray(posts_data,&i,&k,&v);)
			if(k == 'old_password' || k == 'new_password' || k == 'confirm_password')
				posts_data[k] = bltTrim( bltStr(v) );
			else
				bltUnset(&posts_data[k]);
			endif
		endfor
		if(!posts_data['old_password'] || !posts_data['new_password'] || !posts_data['confirm_password'])
			Password.show('旧密码，新密码，确认密码都不能为空!', '', posts_data);
		endif
		if(posts_data['new_password'] != posts_data['confirm_password'])
			Password.show('新密码和确认密码不相同!', '', posts_data);
		endif
		user_info = Mysql.fetchOne(db, "select id,password from users where id = " + sess_data['uid']);
		if(user_info['password'] != bltMd5(posts_data['old_password']))
			Password.show('旧密码不正确!', '', posts_data);
		endif
		// 将密码进行md5加密
		user_info['password'] = bltMd5(posts_data['new_password']);
		// 更新前台用户在users表中的password字段(存储前台用户密码的字段)
		Mysql.Update(db, 'users', user_info, 'id=' + sess_data['uid']);
		Password.show('', '修改密码成功！');
	endfun
endclass
