use pcre;
inc 'common.zl';
inc 'login_base.zl';

LoginBase.checkUserSession();
posts = rqtGetBodyAsArray();
if(!posts['submit'])
	Register.show();
else
	Register.doReg();
endif

class Register
	fun show()
		header_data(&data);
		querys = rqtGetQuery();
		data['csses'] = bltArray('register.css?v=20200821');
		data['redirect'] = querys['redirect'] ? querys['redirect'] : USER_ADMIN;
		data['head_title'] = data['title'] = '用户注册';
		data['datas'] = bltJsonEncode(data);
		print bltMustacheFileRender("tpl/register.tpl",data);
	endfun

	// ajax返回成功或失败
	fun Return(errmsg = '') // Return首字母大写，防止与关键词return冲突
		ret['msg'] = errmsg ? 'failed' : 'success';
		ret['errmsg'] = errmsg;
		rqtSetResponseHeader("Content-Type: application/json");
		print bltJsonEncode(ret);
		bltExit();
	endfun

	fun doReg()
		global posts, db;
		Mysql db;
		user_data['username'] = bltStr(posts['username']);
		user_data['email'] = bltStr(posts['email']);
		user_data['password'] = bltStr(posts['password']);
		bltStr(&posts['confirm_password'], TRUE);
		if(!user_data['username'] || !user_data['email'] || !user_data['password'] || !posts['confirm_password'])
			Register.Return('用户名，邮箱，密码和确认密码都不能为空!');
		endif
		if(user_data['password'] != posts['confirm_password'])
			Register.Return('密码和确认密码不相同!');
		endif
		if(!pcreMatch('^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,})$', user_data['email'], &results, 'is'))
			Register.Return('邮箱格式不正确!');
		endif
		user_info = Mysql.fetchOne(db, "select id,username from users where username='" + mysqlRealEscapeString(db.con, user_data['username']) + 
						"' or email='" + mysqlRealEscapeString(db.con, user_data['email']) + "'");
		if(bltCount(user_info) > 0)
			Register.Return('用户名或邮箱已存在!');
		endif
		user_data['password'] = bltMd5(user_data['password']);
		user_data['reg_time'] = user_data['update_time'] = bltDate('%Y-%m-%d %H:%M:%S');
		Mysql.Insert(db, 'users', user_data);
		Register.Return();
	endfun
endclass
