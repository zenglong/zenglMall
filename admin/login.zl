use builtin, request, mysql, session;
def TRUE 1;
def FALSE 0;
inc '../config.zl';
inc '../mysql.zl';

// 该脚本用于执行和后台登录相关的操作
cookies = rqtGetCookie();
sess_data = sessGetData(bltStr(&cookies['MALL_ADM_SESSION']));
// 如果已经登录过后台了，就直接跳转到后台管理的概览页面
if(bltCount(sess_data) > 0 && sess_data['uid'] > 0)
	rqtSetResponseHeader("HTTP/1.1 302 Moved Temporarily");
	rqtSetResponseHeader("Location: admin.zl");
	// 设置Cache-Control和Pragma响应头来防止CDN和浏览器缓存302跳转
	rqtSetResponseHeader("Cache-Control: no-store,no-cache,must-revalidate,post-check=0,pre-check=0");
	rqtSetResponseHeader("Pragma: no-cache");	
	bltExit();
endif

posts = rqtGetBodyAsArray();
// 如果不是POST请求，则默认显示后台登录页面
if(!posts['submit'])
	data['title'] = 'zenglMall';
	print bltMustacheFileRender("tpl/login.tpl",data);
else
	bltStr(&posts['username'], TRUE);
	bltStr(&posts['password'], TRUE);
	Mysql db;
	db = bltArray();
	Mysql.init(db, config, "tpl/error.tpl");
	result = Mysql.fetchOne(db, "select * from admin_users where username='" + 
					mysqlRealEscapeString(db.con, posts['username']) + "'");
	data['msg'] = 'failed';
	data['errmsg'] = '用户名或密码错误！';
	// 对提交的用户名密码进行校验，校验通过，则设置后台登录相关的会话信息
	if(bltCount(result) > 0)
		if(bltMd5(posts['password']) == result['password'])
			data['msg'] = 'success';
			bltUnset(&data['errmsg']);
			sess_data['username'] = result['username'];
			sess_data['nickname'] = result['nickname'];
			sess_data['uid'] = result['id'];
			sess_id = sessMakeId();
			sessSetData(sess_id, sess_data);
			rqtSetResponseHeader("Set-Cookie: MALL_ADM_SESSION="+sess_id+"; path=/");
		endif
	endif
	rqtSetResponseHeader("Content-Type: application/json");
	print bltJsonEncode(data);
endif

