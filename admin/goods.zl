inc 'common.zl';
inc 'helper.zl';

querys = rqtGetQuery();
action = querys['act'] ? querys['act'] : 'list';
if(action == 'list')
	Goods.list();
elif(action == 'add')
	Goods.add();
elif(action == 'edit')
	Goods.edit();
else
	print 'invalid act';
endif

// 该类用于执行和商品相关的操作(例如显示后台商品列表，添加和编辑商品等)
class Goods
	// 获取分类列表，或者某个分类的信息
	fun getCategory(db, data, posts = 0)
		if(posts && posts['cid'] > 0)
			data['category'] = Mysql.fetchOne(db, "select id,name from category where id='"+posts['cid']+"'");
		else
			data['categories'] = Mysql.fetchAll(db, "select id,name,childcnt from category where pid=0 order by id asc");
		endif
	endfun

	// 显示商品列表
	fun list()
		global querys;
		data['title'] = '商品列表:';
		data['csses', 0] = 'goods_list.css';
		data['head_js', 0] = 'category.js';
		data['cur_menu'] = 'goods.zl';
		db = init_db();
		Goods.getCategory(db, data, querys);
		where = " where 1 ";
		if(bltCount(data['category']))
			where += " and cid=" + data['category', 'id'];
		endif
		stitle = bltStr(&querys['stitle']);
		if(stitle)
			where += ' and g.name like "%' + Mysql.Escape(db, stitle) + '%"';
			data['stitle'] = stitle;
		endif
		tmp = Mysql.fetchOne(db, "select count(1) as cnt from goods as g " + where);
		total = bltInt(tmp['cnt']);
		page = get_page(10, total, 10);
		data['page'] = page;
		data['items'] = Mysql.fetchAll(db, "select g.id,g.name,thumbnail,uid,price,market_price,created_at,updated_at,c.name as cname from goods as g left join category as c on c.id=g.cid "+ where +
							" order by id desc limit " + page['offset'] + "," + page['limit']);
		data['datas'] = bltJsonEncode(data);
		print bltMustacheFileRender("tpl/goods_list.tpl", data);
	endfun

	// 显示添加或编辑商品的页面
	fun showAdd(db, data, posts = 0, isadd = TRUE)
		csses = bltArray('goods_add.css', 'jquery.fileupload.css');
		js = bltArray('ckeditor/ckeditor.js', 'jquery.ui.widget.js', 'jquery.iframe-transport.js', 'jquery.fileupload.js', 'category.js');
		data['csses'] = csses;
		data['head_js'] = js;
		data['cur_menu'] = 'goods.zl';
		data['title'] = isadd ? '添加商品' : '编辑商品';
		data['act'] = isadd ? 'add' : 'edit';
		Goods.getCategory(db, data, posts);
		data['datas'] = bltJsonEncode(data);
		print bltMustacheFileRender("tpl/goods_add.tpl",data);
	endfun

	// 对数据进行预处理
	fun preProcessData(posts)
		if(bltCount(posts) > 0)
			bltUnset(&posts['thumbnail_up']);
			bltStr(&posts['name'], TRUE);
			bltStr(&posts['thumbnail'], TRUE);
			bltStr(&posts['keywords'], TRUE);
			bltStr(&posts['description'], TRUE);
			bltStr(&posts['content'], TRUE);
			bltInt(&posts['cid'], TRUE);
			bltFloat(&posts['price'], TRUE);
			bltFloat(&posts['market_price'], TRUE);
		endif
	endfun

	// 校验数据
	fun validate(db, posts, isadd = TRUE)
		if(!posts['name'])
			data['err_msg'] = '商品名称不能为空';
		elif(!posts['price'] || !posts['market_price'])
			data['price'] = '必须填写商品价格和市场价格';
		elif(!posts['content'])
			data['err_msg'] = '商品详情不能为空';
		elif(!posts['cid'])
			data['err_msg'] = '请选择有效的分类';
		elif(!isadd && !posts['id'])
			data['err_msg'] = '无效的商品ID';
		endif
		if(data['err_msg'])
			data['posts'] = posts;
			if(posts['id'])
				data['id'] = posts['id'];
			endif
			Goods.showAdd(db, data, posts, isadd);
			bltExit();
		endif
	endfun

	// 添加商品
	fun add()
		global sess_data;
		posts = rqtGetBodyAsArray();
		db = init_db();
		Goods.preProcessData(posts);
		if(posts['submit'])
			Goods.validate(db, posts);
			bltUnset(&posts['submit']);
			posts['created_at'] = bltDate('%Y-%m-%d %H:%M:%S');
			posts['updated_at'] = posts['created_at'];
			posts['uid'] = sess_data['uid'];
			Mysql.Insert(db, 'goods', posts);
			data['success_msg'] = '添加商品成功';
		endif
		Goods.showAdd(db, data);
	endfun

	// 编辑商品
	fun edit()
		global querys;
		posts = rqtGetBodyAsArray();
		db = init_db();
		Goods.preProcessData(posts);
		if(posts['submit'])
			id = bltInt(posts['id']);
			Goods.validate(db, posts, FALSE);
			bltUnset(&posts['submit']);
			posts['updated_at'] = bltDate('%Y-%m-%d %H:%M:%S');
			Mysql.Update(db, 'goods', posts, 'id=' + id);
			data['success_msg'] = '编辑商品成功';
		else
			id = bltInt(querys['id']);
		endif
		data['posts'] = Mysql.fetchOne(db, "select * from goods where id='"+id+"'");
		if(!bltCount(data['posts']))
			data['err_msg'] = '无效的商品ID';
			id = 0;
		endif
		data['id'] = id;
		Goods.showAdd(db, data, data['posts'], FALSE);
	endfun
endclass
