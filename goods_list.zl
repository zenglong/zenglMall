inc 'common.zl';
inc 'base.zl';

// 商品列表页面默认显示的商品数量，以及异步加载更多商品时，需要加载的商品数量
def PAGE_NUM 20;

querys = rqtGetQuery();
act = querys['act'] ? querys['act'] : 'index';
if(act == 'index')
	GoodsList.index();
elif(act == 'ajax_page')
	GoodsList.ajaxPage();
else
	print 'invalid act';;
endif

class GoodsList
	// 商品列表页面
	fun index()
		global querys, db;
		header_data(&data);
		data['csses'] = bltArray('goods_list.css?v=20200815');
		cid = bltInt(querys['cid']);
		cate_info = Mysql.fetchOne(db, "select id,name,pid,description from category where id=" + cid);
		pid = cate_info['pid'];
		data['head_title'] = cate_info['name'] + ' - ' + data['site_name'];
		data['description'] = cate_info['description'];
		data['cate_info'] = cate_info;
		data['sub_cate_list'] = Mysql.fetchAll(db, "select id,name from category where pid=" + (pid > 0 ? pid : cid));
		data['goods_list'] = Base.goodsListByCid(cid, 0, PAGE_NUM);
		data['datas'] = bltJsonEncode(data);
		print bltMustacheFileRender("/tpl/goods_list.tpl", data);
	endfun

	// 异步加载更多商品
	fun ajaxPage()
		global querys, db;
		page = bltInt(querys['page']);
		cid = bltInt(querys['cid']);
		if(page < 1)
			page = 1;
		endif
		offset = (page - 1) * PAGE_NUM;
		goods_list = Base.goodsListByCid(cid, offset, PAGE_NUM);
		rqtSetResponseHeader("Content-Type: application/json");
		print bltJsonEncode(goods_list);
	endfun
endclass
